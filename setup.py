import pip
from distutils.core import setup
from distutils.command.build_py import build_py
import os
from os.path import exists
from sys import executable


def install_packages(packages):
    """
    :param packages: List of Python Package names to be installed by pip in the format 'package-name>=version.number'
    :return: Nothing
    """
    try:
        for package in packages:
            pip.main(['install', '--user', package])
    except SystemExit as e:
        print(e)

# Override build_py to be able to execute a command
class my_build_py(build_py):
    def run(self):

        # Now we actually create the config files
        print("Creating config files")

        # We set the directory to the configuration
        configdir = "{}/src/configuration_files".format(os.getcwd())
        # If the configuration file directory doesn't exist
        if not exists(configdir):
            os.mkdir(configdir)
            with open("{}/__init__.py".format(configdir), 'w') as outfile:
                outfile.write("# Generated by {}\n".format(__file__))

        # If the keys.py file doesn't exist
        if not exists("{}/keys.py".format(configdir)):
            # We can create it
            with open("{}/keys.py".format(configdir), 'w') as key_file:
                email = input("Enter your gmail account: ").replace(" ", "")
                key_file.write("# This file was automatically generated by {}\n".format(__file__))
                key_file.write("user_id = \"" + (email if '@' in email else email + "@gmail.com") + "\"\n")

        build_py.run(self)


setup(
    name='HappyMail',
    version='0.1',
    packages=['src',],
    license='MIT License',
    long_description=open('README.md', mode='r').read(),
    cmdclass={'build_py': my_build_py}
)
